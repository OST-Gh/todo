///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
use itoa::Buffer;
use std::path::PathBuf;
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pub struct Todo {
	pub todo: Vec<String>,
	pub todo_path: PathBuf,
	pub todo_bak: Option<PathBuf>,
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
pub fn help() {
	println!(
		"Usage: todo [COMMAND] [ARGUMENTS]\n\
		Todo is a super fast and simple tasks organizer written in rust\n\
		Available commands:\n\
		- add    [TASK...            ]: adds new task/s\n\
		- list   [                   ]: lists all tasks\n\
		- done   [INDEX/NAME...      ]: marks task as done\n\
		- rm     [INDEX/NAME/done... ]: removes a task\n\
		- reset  [                   ]: deletes all tasks\n\
		- restore[                   ]: restore recent backup\n\
		- sort   [                   ]: sorts by status\n\
		- raw    [todo/done          ]: prints selection as plain text"
	);
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
